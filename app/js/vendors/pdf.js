



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>ng-pdfviewer/pdf.js at develop Â· akrennmair/ng-pdfviewer</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="akrennmair/ng-pdfviewer" name="twitter:title" /><meta content="ng-pdfviewer - AngularJS PDF viewer directive using pdf.js." name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/41766?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/41766?v=2&amp;s=400" property="og:image" /><meta content="akrennmair/ng-pdfviewer" property="og:title" /><meta content="https://github.com/akrennmair/ng-pdfviewer" property="og:url" /><meta content="ng-pdfviewer - AngularJS PDF viewer directive using pdf.js." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="3D10B1BE:4288:78BCD30:543BBC9B" name="octolytics-dimension-request_id" /><meta content="7866663" name="octolytics-actor-id" /><meta content="vikaslm" name="octolytics-actor-login" /><meta content="72e7579c8525b4470b70afa064d6e8e8f779a7d4a9a778944ffb10ff95b8c90e" name="octolytics-actor-hash" />
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="9xMWmWCpRSC8iph2BBbVXIoaCrrko1qsARiP4y7Nmg/tD0+yYl1fQ3Q0Lr5BxrgS9dEuJEV0BzYYW0Rk4H7zxg==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-043670bf5d45762c99c890603216d8776470fa11262837b5ba8ca37f4175d357.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-f97cae5c72db1b1729daa66251ec6bbfed848d4af992c2f4842aed69d5cc5277.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="1bc26f375a269a3b5dc66c8831eeb112">

      
  <meta name="description" content="ng-pdfviewer - AngularJS PDF viewer directive using pdf.js.">
  <meta name="go-import" content="github.com/akrennmair/ng-pdfviewer git https://github.com/akrennmair/ng-pdfviewer.git">

  <meta content="41766" name="octolytics-dimension-user_id" /><meta content="akrennmair" name="octolytics-dimension-user_login" /><meta content="12951025" name="octolytics-dimension-repository_id" /><meta content="akrennmair/ng-pdfviewer" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="12951025" name="octolytics-dimension-repository_network_root_id" /><meta content="akrennmair/ng-pdfviewer" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/akrennmair/ng-pdfviewer/commits/develop.atom" rel="alternate" title="Recent Commits to ng-pdfviewer:develop" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/akrennmair/ng-pdfviewer/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/akrennmair/ng-pdfviewer/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/vikaslm" data-ga-click="Header, go to profile, text:username">
      <img alt="vikaslm" class="avatar" data-user="7866663" height="20" src="https://avatars3.githubusercontent.com/u/7866663?v=2&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">vikaslm</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="akrennmair/ng-pdfviewer">This repository</span>
    </li>
      <li>
        <a href="/akrennmair/ng-pdfviewer/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status all-read"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="yPsIpDqr+JTKQO/tiSAauILkZWgrZmEosiqhqOZVENZ1tRw6/sNNATpWQrm2RZ/msPZoHrkFwzC7GsDKpjFnGg==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="DsFegfutebeVTV/EZrY4IcBCYoVdFq77EF6fpHyhXkDMv8T7ZTewcQl9y1di8P9JMxzRaJdkcVG/m53e7gAJfQ==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="12951025" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/akrennmair/ng-pdfviewer/watchers">
        9
      </a>
      <a href="/akrennmair/ng-pdfviewer/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/akrennmair/ng-pdfviewer/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="P3rKCSEwYGJqrM1sE0nqfVJADWso5hJx+kUwbTVPL320RddoLn2B7QBWSHaZWRWu7Ride8D6zOiAUBHy0I4quw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar akrennmair/ng-pdfviewer">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/akrennmair/ng-pdfviewer/stargazers">
          67
        </a>
</form>
    <form accept-charset="UTF-8" action="/akrennmair/ng-pdfviewer/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8jXuXkfQj95XXH/cqVX1LJCOLDkpV13ddLViy6V8N4i3ssso+ljlWvSNo+5FeqxYem9CKeUzsPVYRu7ET+Z5Iw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star akrennmair/ng-pdfviewer">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/akrennmair/ng-pdfviewer/stargazers">
          67
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/akrennmair/ng-pdfviewer/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of akrennmair/ng-pdfviewer to your account" aria-label="Fork your own copy of akrennmair/ng-pdfviewer to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/akrennmair/ng-pdfviewer/network" class="social-count">30</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/akrennmair" class="url fn" itemprop="url" rel="author"><span itemprop="title">akrennmair</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/akrennmair/ng-pdfviewer" class="js-current-repository js-repo-home-link">ng-pdfviewer</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" role="navigation" data-issue-count-url="/akrennmair/ng-pdfviewer/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/akrennmair/ng-pdfviewer" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /akrennmair/ng-pdfviewer">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/akrennmair/ng-pdfviewer/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /akrennmair/ng-pdfviewer/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/akrennmair/ng-pdfviewer/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /akrennmair/ng-pdfviewer/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/akrennmair/ng-pdfviewer/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /akrennmair/ng-pdfviewer/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/akrennmair/ng-pdfviewer/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /akrennmair/ng-pdfviewer/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/akrennmair/ng-pdfviewer/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /akrennmair/ng-pdfviewer/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/akrennmair/ng-pdfviewer.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/akrennmair/ng-pdfviewer.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:akrennmair/ng-pdfviewer.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:akrennmair/ng-pdfviewer.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/akrennmair/ng-pdfviewer" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/akrennmair/ng-pdfviewer" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save akrennmair/ng-pdfviewer to your computer and use it in GitHub Desktop." aria-label="Save akrennmair/ng-pdfviewer to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/akrennmair/ng-pdfviewer/archive/develop.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of akrennmair/ng-pdfviewer as a zip file"
                   title="Download the contents of akrennmair/ng-pdfviewer as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/akrennmair/ng-pdfviewer/blob/1697503ca801ee05fce390d19a9b45ac16deeff6/example/pdf.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:a33dccb249329402a7c2498038046484 -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="develop"
    data-ref="develop"
    title="develop"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">develop</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/akrennmair/ng-pdfviewer/blob/develop/example/pdf.js"
                 data-name="develop"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="develop">develop</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/akrennmair/ng-pdfviewer/blob/master/example/pdf.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/akrennmair/ng-pdfviewer/tree/r0.2.1/example/pdf.js"
                 data-name="r0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="r0.2.1">r0.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/akrennmair/ng-pdfviewer/tree/r0.2.0/example/pdf.js"
                 data-name="r0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="r0.2.0">r0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/akrennmair/ng-pdfviewer/tree/r0.1.0/example/pdf.js"
                 data-name="r0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="r0.1.0">r0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/akrennmair/ng-pdfviewer/find/develop"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="example/pdf.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/akrennmair/ng-pdfviewer" class="" data-branch="develop" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">ng-pdfviewer</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/akrennmair/ng-pdfviewer/tree/develop/example" class="" data-branch="develop" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">example</span></a></span><span class="separator"> / </span><strong class="final-path">pdf.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Andreas Krennmair" class="avatar" data-user="41766" height="24" src="https://avatars0.githubusercontent.com/u/41766?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/akrennmair" rel="author">akrennmair</a></span>
        <time datetime="2013-09-21T16:29:55Z" is="relative-time">Sep 21, 2013</time>
        <div class="commit-title">
            <a href="/akrennmair/ng-pdfviewer/commit/ebaeb79b29c89a2881fba7e6834d539b50cdc390" class="message" data-pjax="true" title="add example.">add example.</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Andreas Krennmair" data-user="41766" height="24" src="https://avatars0.githubusercontent.com/u/41766?v=2&amp;s=48" width="24" />
            <a href="/akrennmair">akrennmair</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>164 lines (163 sloc)</span>
          <span class="meta-divider"></span>
        <span>83.751 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/akrennmair/ng-pdfviewer/raw/develop/example/pdf.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/akrennmair/ng-pdfviewer/blame/develop/example/pdf.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/akrennmair/ng-pdfviewer/commits/develop/example/pdf.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/akrennmair/ng-pdfviewer/edit/develop/example/pdf.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/akrennmair/ng-pdfviewer/delete/develop/example/pdf.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">PDFJS</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">?</span><span class="nb">window</span><span class="o">:</span><span class="k">this</span><span class="p">).</span><span class="nx">PDFJS</span><span class="o">=</span><span class="p">{});</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;0.8.505&quot;</span><span class="p">;</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">build</span><span class="o">=</span><span class="s2">&quot;da1c944&quot;</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ra</span><span class="o">&gt;=</span><span class="nx">rb</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="s2">&quot;Info: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">LogManager</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="s2">&quot;info&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ra</span><span class="o">&gt;=</span><span class="nx">sa</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="s2">&quot;Warning: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">LogManager</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="s2">&quot;warn&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;Error:&quot;</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">join</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">H</span><span class="p">(</span><span class="s2">&quot;Error: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">H</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">();}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">stack</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">LogManager</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">a</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;TODO: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">sb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;://&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">$</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">)){</span><span class="k">case</span> <span class="s2">&quot;http&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;https&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;ftp&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;mailto&quot;</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">enumerable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">configurable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">writable</span><span class="o">:!</span><span class="mi">1</span><span class="p">});</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;\u00fe&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;\u00ff&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">8</span><span class="o">|</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">tb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="p">)],</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Name</span><span class="p">}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Dict</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Type&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">==</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;object&quot;</span><span class="o">==</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;getBytes&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">;</span><span class="k">else</span> <span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;FunctionType&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">comObj</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">callbackIndex</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">actionHandler</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">.</span><span class="nx">console_log</span><span class="o">=</span><span class="p">[</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">)}];</span><span class="nx">d</span><span class="p">.</span><span class="nx">console_error</span><span class="o">=</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nx">w</span><span class="o">?</span><span class="p">[</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">w</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">)}]</span><span class="o">:</span><span class="p">[</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">)}];</span><span class="nx">d</span><span class="p">.</span><span class="nx">_warn</span><span class="o">=</span><span class="p">[</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">)}];</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">isReply</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="nx">f</span><span class="p">.</span><span class="nx">callbackId</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">callbackId</span> <span class="k">in</span> <span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">)}</span><span class="k">else</span> <span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Cannot resolve callback &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="nx">f</span><span class="p">.</span><span class="nx">action</span> <span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">action</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">callbackId</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">postMessage</span><span class="p">({</span><span class="nx">isReply</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">callbackId</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">callbackId</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">a</span><span class="p">})}),</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unkown action from worker: &quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">action</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">va</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleX</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleY</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">_originalSave</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalRestore</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalRotate</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalScale</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalTranslate</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalTransform</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalSetTransform</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleX</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_scaleY</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">_transformStack</span><span class="o">=</span><span class="p">[],</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;mozCurrentTransform&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">}}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;mozCurrentTransformInverse&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="o">*</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="nx">f</span><span class="o">/</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="o">/</span><span class="nx">h</span><span class="p">,(</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">j</span><span class="p">,(</span><span class="nx">d</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">h</span><span class="p">]}}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_originalSave</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_originalRestore</span><span class="p">())},</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="nx">d</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_originalTranslate</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_originalScale</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">5</span><span class="p">]];</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalTransform</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">_originalSetTransform</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_transformMatrix</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*-</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*-</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">5</span><span class="p">]];</span><span class="k">this</span><span class="p">.</span><span class="nx">_originalRotate</span><span class="p">(</span><span class="nx">a</span><span class="p">)})}</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">?</span><span class="k">this</span><span class="o">:</span><span class="nb">window</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">,</span><span class="nx">sa</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">rb</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="nx">sa</span><span class="p">,</span><span class="nx">ba</span><span class="o">=</span><span class="p">[</span><span class="mf">0.0010</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.0010</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="o">||</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="o">=</span><span class="p">{});</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">pdfBug</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;console&quot;</span><span class="k">in</span> <span class="nx">w</span><span class="o">&amp;&amp;</span><span class="s2">&quot;log&quot;</span><span class="k">in</span> <span class="nx">w</span><span class="p">.</span><span class="nx">console</span><span class="o">?</span><span class="nx">w</span><span class="p">.</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">console</span><span class="p">)</span><span class="o">:</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">isValidUrl</span><span class="o">=</span><span class="nx">$</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ca</span><span class="o">=</span><span class="p">[];</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">LogManager</span><span class="o">=</span><span class="p">{</span><span class="nx">addLogger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ca</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">notify</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">ca</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">ca</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">b</span><span class="p">)}}};</span><span class="kd">var</span> <span class="nx">wa</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">PasswordResponses</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="p">{</span><span class="nx">NEED_PASSWORD</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">INCORRECT_PASSWORD</span><span class="o">:</span><span class="mi">2</span><span class="p">},</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nb">Error</span><span class="p">();</span><span class="nx">S</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;NotImplementedException&quot;</span><span class="p">;</span><span class="nx">S</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="kd">var</span> <span class="nx">xa</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">ub</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">q</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;rgb(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">makeCssCmyk</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">cmyk</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">q</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]]};</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="nx">q</span><span class="p">.</span><span class="nx">applyTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">]]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyInverseTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span><span class="p">[(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">/</span><span class="nx">c</span><span class="p">,(</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="nx">c</span><span class="p">]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">getAxialAlignedBoundingBox</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]],</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line"><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">])]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">inverseTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/</span><span class="nx">b</span><span class="p">,(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">/</span><span class="nx">b</span><span class="p">,(</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="nx">b</span><span class="p">]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">apply3dTransform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">singularValueDecompose2dScale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">((</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">d</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">])))</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="p">),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">b</span><span class="p">)]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">normalizeRect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">intersect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]].</span><span class="nx">sort</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]].</span><span class="nx">sort</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">normalizeRect</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">normalizeRect</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span> <span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span> <span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">sign</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">concatenateToArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">prependToArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unshift</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">extendObj</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">b</span><span class="p">);)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Parent&quot;</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">q</span><span class="p">.</span><span class="nx">inherit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]};</span><span class="nx">q</span><span class="p">.</span><span class="nx">loadScript</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">||</span><span class="nx">b</span><span class="p">();</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">ub</span><span class="p">.</span><span class="nx">Util</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">vb</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">,</span><span class="nx">da</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">viewBox</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetX</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetY</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="nx">c</span><span class="o">%=</span><span class="mi">360</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="mi">360</span><span class="o">:</span><span class="nx">c</span><span class="p">){</span><span class="k">case</span> <span class="mi">180</span><span class="o">:</span><span class="nx">c</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">90</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">270</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=-</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="o">=-</span><span class="nx">k</span><span class="p">);</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line"><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">j</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">c</span><span class="o">*</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">b</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">j</span><span class="o">*</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="o">*</span><span class="nx">h</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fontScale</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">da</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">clone</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;scale&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;rotation&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">da</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewBox</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dontFlip</span><span class="p">)},</span><span class="nx">convertToViewportPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">)},</span><span class="nx">convertToViewportRectangle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]],</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]]},</span><span class="nx">convertToPdfPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">applyInverseTransform</span><span class="p">([</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">)}};</span><span class="nx">vb</span><span class="p">.</span><span class="nx">PageViewport</span><span class="o">=</span><span class="nx">da</span><span class="p">;</span><span class="kd">var</span> <span class="nx">tb</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">728</span><span class="p">,</span><span class="mi">711</span><span class="p">,</span><span class="mi">710</span><span class="p">,</span><span class="mi">729</span><span class="p">,</span><span class="mi">733</span><span class="p">,</span><span class="mi">731</span><span class="p">,</span><span class="mi">730</span><span class="p">,</span><span class="mi">732</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">8226</span><span class="p">,</span><span class="mi">8224</span><span class="p">,</span><span class="mi">8225</span><span class="p">,</span><span class="mi">8230</span><span class="p">,</span><span class="mi">8212</span><span class="p">,</span><span class="mi">8211</span><span class="p">,</span><span class="mi">402</span><span class="p">,</span><span class="mi">8260</span><span class="p">,</span><span class="mi">8249</span><span class="p">,</span><span class="mi">8250</span><span class="p">,</span><span class="mi">8722</span><span class="p">,</span><span class="mi">8240</span><span class="p">,</span><span class="mi">8222</span><span class="p">,</span><span class="mi">8220</span><span class="p">,</span><span class="mi">8221</span><span class="p">,</span><span class="mi">8216</span><span class="p">,</span><span class="mi">8217</span><span class="p">,</span><span class="mi">8218</span><span class="p">,</span><span class="mi">8482</span><span class="p">,</span><span class="mi">64257</span><span class="p">,</span><span class="mi">64258</span><span class="p">,</span><span class="mi">321</span><span class="p">,</span><span class="mi">338</span><span class="p">,</span><span class="mi">352</span><span class="p">,</span><span class="mi">376</span><span class="p">,</span><span class="mi">381</span><span class="p">,</span><span class="mi">305</span><span class="p">,</span><span class="mi">322</span><span class="p">,</span><span class="mi">339</span><span class="p">,</span><span class="mi">353</span><span class="p">,</span><span class="mi">382</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">8364</span><span class="p">],</span><span class="nx">wb</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="o">=</span><span class="nx">ya</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlers</span><span class="o">=</span><span class="p">[]},</span><span class="nx">ya</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">ea</span><span class="o">=</span><span class="p">{</span><span class="nx">handlers</span><span class="o">:</span><span class="p">[],</span><span class="nx">running</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">unhandledRejections</span><span class="o">:</span><span class="p">[],</span><span class="nx">pendingRejectionCheck</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">scheduleHandlers</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_status</span><span class="o">!=</span><span class="nx">ya</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handlers</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">handlers</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handlers</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">_handlers</span><span class="o">=</span><span class="p">[],</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">runHandlers</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="mi">0</span><span class="p">)))},</span><span class="nx">runHandlers</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">handlers</span><span class="p">.</span><span class="nx">length</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">handlers</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">thisPromise</span><span class="p">.</span><span class="nx">_status</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">thisPromise</span><span class="p">.</span><span class="nx">_value</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">onResolve</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">onResolve</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">onReject</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">onReject</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">thisPromise</span><span class="p">.</span><span class="nx">_unhandledRejection</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeUnhandeledRejection</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">thisPromise</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">K</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextPromise</span><span class="p">.</span><span class="nx">_updateStatus</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">addUnhandledRejection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">promise</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="nx">time</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">scheduleRejectionCheck</span><span class="p">()},</span><span class="nx">removeUnhandeledRejection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">_unhandledRejection</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">promise</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">--</span><span class="p">)},</span><span class="nx">scheduleRejectionCheck</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingRejectionCheck</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingRejectionCheck</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingRejectionCheck</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">500</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">time</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">promise</span><span class="p">.</span><span class="nx">_value</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;Unhandled rejection: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">stack</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;\n&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">stack</span><span class="p">);</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">--</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">unhandledRejections</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scheduleRejectionCheck</span><span class="p">()}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="mi">500</span><span class="p">))}};</span><span class="nx">T</span><span class="p">.</span><span class="nx">all</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_status</span><span class="o">!==</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">T</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">_status</span><span class="o">!==</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">--</span><span class="p">,</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">e</span><span class="p">))}}(</span><span class="nx">f</span><span class="p">),</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">T</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">_status</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="nx">_value</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_handlers</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_unhandledRejection</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_updateStatus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="o">===</span><span class="nx">K</span><span class="o">||</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">then</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateStatus</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateStatus</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">K</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_value</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">===</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlers</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_unhandledRejection</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">ea</span><span class="p">.</span><span class="nx">addUnhandledRejection</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="nx">ea</span><span class="p">.</span><span class="nx">scheduleHandlers</span><span class="p">(</span><span class="k">this</span><span class="p">)))},</span><span class="nx">get</span> <span class="nx">isResolved</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="p">},</span><span class="nx">get</span> <span class="nx">isRejected</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_status</span><span class="o">===</span><span class="nx">K</span><span class="p">},</span><span class="nx">resolve</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateStatus</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line"><span class="nx">a</span><span class="p">)},</span><span class="nx">reject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateStatus</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">then</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">T</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlers</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">thisPromise</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">onResolve</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">onReject</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">nextPromise</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="nx">ea</span><span class="p">.</span><span class="nx">scheduleHandlers</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">wb</span><span class="p">.</span><span class="nx">Promise</span><span class="o">=</span><span class="nx">T</span><span class="p">,</span><span class="nx">za</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">times</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">};</span><span class="nx">za</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">time</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Timer is already running for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">())},</span><span class="nx">timeEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="o">||</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Timer has not been started for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">times</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line"><span class="nx">start</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">end</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()}),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">started</span><span class="p">[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">times</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)}</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">g</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">+=</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;ms\n&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}};</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">createBlob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">Blob</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Blob</span><span class="p">([</span><span class="nx">a</span><span class="p">],{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">MozBlobBuilder</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">getBlob</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">aa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">actionHandler</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line"><span class="nx">l</span><span class="p">(</span><span class="s1">&#39;There is already an actionName called &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">]},</span><span class="nx">send</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">action</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">callbackIndex</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">callbackId</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">comObj</span><span class="p">.</span><span class="nx">postMessage</span><span class="p">(</span><span class="nx">a</span><span class="p">)}};</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;should not call ColorSpace constructor&quot;</span><span class="p">)};</span><span class="nx">D</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call ColorSpace.getRgb&quot;</span><span class="p">)},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call ColorSpace.getRgbItem&quot;</span><span class="p">)},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call ColorSpace.getRgbBuffer&quot;</span><span class="p">)},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call ColorSpace.getOutputLength&quot;</span><span class="p">)},</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line"><span class="nx">isPassthrough</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">subarray</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;DeviceGray&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="s2">&quot;DeviceRGB&quot;</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">?</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">getRgbBuffer</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="mi">3</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">getRgbBuffer</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">D</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">parseToIR</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">fa</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">D</span><span class="p">.</span><span class="nx">fromIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;DeviceGrayCS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">gray</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DeviceRgbCS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">rgb</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DeviceCmykCS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">cmyk</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;PatternCS&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="k">new</span> <span class="nx">Aa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;IndexedCS&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Ba</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">case</span> <span class="s2">&quot;AlternateCS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="k">new</span> <span class="nx">fa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">D</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">M</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">case</span> <span class="s2">&quot;LabCS&quot;</span><span class="o">:</span><span class="k">return</span> <span class="k">new</span> <span class="nx">Ca</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">WhitePoint</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line"><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">BlackPoint</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">Range</span><span class="p">);</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unkown name &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">D</span><span class="p">.</span><span class="nx">parseToIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;ColorSpace&quot;</span><span class="p">);</span><span class="nx">O</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">)}</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;DeviceGray&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;G&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceGrayCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DeviceRGB&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;RGB&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceRgbCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DeviceCMYK&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;CMYK&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceCmykCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;Pattern&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;PatternCS&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">];</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;unrecognized colorspace &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">name</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;DeviceGray&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;G&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceGrayCS&quot;</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line"><span class="k">case</span> <span class="s2">&quot;DeviceRGB&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;RGB&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceRgbCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;DeviceCMYK&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;CMYK&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceCmykCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;CalGray&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceGrayCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;CalRGB&quot;</span><span class="o">:</span><span class="k">return</span><span class="s2">&quot;DeviceRgbCS&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ICCBased&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]).</span><span class="nx">dict</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;N&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;DeviceGrayCS&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;DeviceRgbCS&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">4</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;DeviceCmykCS&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;Pattern&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">parseToIR</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)),[</span><span class="s2">&quot;PatternCS&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;Indexed&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;I&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">parseToIR</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">W</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBytes</span><span class="p">()),[</span><span class="s2">&quot;IndexedCS&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line"><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;Separation&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;DeviceN&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">parseToIR</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getIR</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]));</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;AlternateCS&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">];</span><span class="k">case</span> <span class="s2">&quot;Lab&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;LabCS&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">getAll</span><span class="p">()];</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s1">&#39;unimplemented color space object &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">l</span><span class="p">(</span><span class="s1">&#39;unrecognized color space object: &quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">};</span><span class="nx">D</span><span class="p">.</span><span class="nx">isDefaultDecode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;The decode map is not the correct length&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line"><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">};</span><span class="nx">D</span><span class="p">.</span><span class="nx">singletons</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span> <span class="nx">gray</span><span class="p">(){</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;gray&quot;</span><span class="p">,</span><span class="k">new</span> <span class="nx">Da</span><span class="p">)},</span><span class="nx">get</span> <span class="nx">rgb</span><span class="p">(){</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;rgb&quot;</span><span class="p">,</span><span class="k">new</span> <span class="nx">Ea</span><span class="p">)},</span><span class="nx">get</span> <span class="nx">cmyk</span><span class="p">(){</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;cmyk&quot;</span><span class="p">,</span><span class="k">new</span> <span class="nx">Fa</span><span class="p">)}};</span><span class="nx">t</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">fa</span><span class="p">,</span><span class="nx">Ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;Alternate&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tintFn</span><span class="o">=</span><span class="nx">c</span><span class="p">};</span><span class="nx">Ga</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;subarray&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">subarray</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)</span><span class="o">:</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tintFn</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tintFn</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">numComps</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">usesZeroToOneRange</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">||!</span><span class="nx">m</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">k</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">j</span><span class="o">*</span><span class="nx">c</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">)</span><span class="nx">u</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">r</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="k">else</span> <span class="nx">h</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="nx">s</span><span class="o">+=</span><span class="nx">j</span><span class="p">}</span><span class="nx">k</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">getRgbBuffer</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">8</span><span class="p">)},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">getOutputLength</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">numComps</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">,</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createRgbBuffer</span><span class="p">,</span><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">isDefaultDecode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">fa</span><span class="o">=</span><span class="nx">Ga</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Aa</span><span class="p">,</span><span class="nx">Ha</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;Pattern&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">Ha</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{};</span><span class="nx">Aa</span><span class="o">=</span><span class="nx">Ha</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ba</span><span class="p">,</span><span class="nx">Ia</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;Indexed&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">([</span><span class="mi">0</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">highVal</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">numComps</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getBytes</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line"><span class="k">typeof</span> <span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="o">||</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unrecognized lookup table: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">lookup</span><span class="o">=</span><span class="nx">d</span><span class="p">};</span><span class="nx">Ia</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lookup</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lookup</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">numComps</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">numComps</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getOutputLength</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lookup</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">getRgbBuffer</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line"><span class="nx">k</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">8</span><span class="p">);</span><span class="nx">e</span><span class="o">+=</span><span class="nx">h</span><span class="p">}},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">getOutputLength</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">base</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">,</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createRgbBuffer</span><span class="p">,</span><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">Ia</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Da</span><span class="p">,</span><span class="nx">Ja</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;DeviceGray&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">([</span><span class="mi">0</span><span class="p">])};</span><span class="nx">Ja</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line"><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="mi">255</span><span class="o">/</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">}},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="nx">a</span><span class="p">},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">,</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createRgbBuffer</span><span class="p">,</span><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">isDefaultDecode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">Da</span><span class="o">=</span><span class="nx">Ja</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ea</span><span class="p">,</span><span class="nx">Ka</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;DeviceRGB&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])};</span><span class="nx">Ka</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">getRgbItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">c</span><span class="o">*=</span><span class="mi">3</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">8</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">subarray</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="mi">255</span><span class="o">/</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">]</span><span class="o">|</span><span class="mi">0</span><span class="p">}},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">8</span><span class="o">==</span><span class="nx">a</span><span class="p">},</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createRgbBuffer</span><span class="p">,</span><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">isDefaultDecode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">Ea</span><span class="o">=</span><span class="nx">Ka</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Fa</span><span class="p">,</span><span class="nx">ga</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">*=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">3</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">4.387332384609988</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="mf">54.48615194189176</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="mf">18.82290502165302</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">212.25662451639585</span><span class="o">*</span><span class="nx">c</span><span class="o">+-</span><span class="mf">285.2331026137004</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="p">(</span><span class="mf">1.7149763477362134</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mf">5.6096736904047315</span><span class="o">*</span><span class="nx">h</span><span class="o">+-</span><span class="mf">17.873870861415444</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">5.497006427196366</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">2.5217340131683033</span><span class="o">*</span><span class="nx">h</span><span class="o">-</span><span class="mf">21.248923337353073</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mf">17.5119270841813</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">21.86122147463605</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">189.48180835922747</span><span class="p">)</span><span class="o">+</span><span class="mi">255</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="mf">8.841041422036149</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="mf">60.118027045597366</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="mf">6.871425592049007</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">31.159100130055922</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line"><span class="nx">c</span><span class="o">+-</span><span class="mf">79.2970844816548</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">15.310361306967817</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="mf">17.575251261109482</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">131.35250912493976</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">190.9453302588951</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="mf">4.444339102852739</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">9.8632861493405</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">24.86741582555878</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">20.737325471181034</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">187.80453709719578</span><span class="p">)</span><span class="o">+</span><span class="mi">255</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="mf">0.8842522430003296</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="mf">8.078677503112928</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="mf">30.89978309703729</span><span class="o">*</span><span class="nx">h</span><span class="o">-</span><span class="mf">0.23883238689178934</span><span class="o">*</span><span class="nx">c</span><span class="o">+-</span><span class="mf">14.183576799673286</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="p">(</span><span class="mf">10.49593273432072</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="mf">63.02378494754052</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">50.606957656360734</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">112.23884253719248</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="mf">0.03296041114873217</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">115.60384449646641</span><span class="o">*</span><span class="nx">c</span><span class="o">+-</span><span class="mf">193.58209356861505</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="o">-</span><span class="mf">22.33816807309886</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mf">180.12613974708367</span><span class="p">)</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line"><span class="mi">255</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">?</span><span class="mi">255</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="p">},</span><span class="nx">La</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;DeviceCMYK&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">])};</span><span class="nx">La</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="mi">4</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="mi">3</span><span class="p">},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">)},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">,</span><span class="nx">createRgbBuffer</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createRgbBuffer</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line"><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">isDefaultDecode</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="p">)},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">Fa</span><span class="o">=</span><span class="nx">La</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ca</span><span class="p">,</span><span class="nx">Ma</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;Lab&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numComps</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultColor</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]);</span><span class="nx">a</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;WhitePoint missing - required for color space Lab&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">[</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="o">-</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">XW</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">YW</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">ZW</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">amin</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">amax</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">bmin</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">bmax</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">XB</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">YB</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">ZB</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];(</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">XW</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">ZW</span><span class="o">||</span><span class="mi">1</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">YW</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid WhitePoint components, no fallback available&quot;</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">XB</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">YB</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">ZB</span><span class="p">)</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;Invalid BlackPoint, falling back to default&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">XB</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">YB</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ZB</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">amin</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">amax</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">bmin</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">bmax</span><span class="p">)</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;Invalid Range, falling back to defaults&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">amin</span><span class="o">=-</span><span class="mi">100</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">amax</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bmin</span><span class="o">=-</span><span class="mi">100</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bmax</span><span class="o">=</span><span class="mi">100</span><span class="p">},</span><span class="nx">ha</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">/</span><span class="mi">29</span><span class="o">?</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">:</span><span class="mi">108</span><span class="o">/</span><span class="mi">841</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">4</span><span class="o">/</span><span class="mi">29</span><span class="p">)},</span><span class="nx">ia</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span><span class="o">!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="o">+</span><span class="mi">100</span><span class="o">*</span><span class="nx">g</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">amin</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">amax</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">amin</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmin</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmax</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmin</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">amax</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">amax</span><span class="o">:</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">amin</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">amin</span><span class="o">:</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmax</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmax</span><span class="o">:</span><span class="nx">b</span><span class="o">&lt;</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">bmin</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">bmin</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="mi">16</span><span class="p">)</span><span class="o">/</span><span class="mi">116</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="o">/</span><span class="mi">200</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">XW</span><span class="o">*</span><span class="nx">ha</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="o">/</span><span class="mi">500</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">YW</span><span class="o">*</span><span class="nx">ha</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ZW</span><span class="o">*</span><span class="nx">ha</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ZW</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mf">3.1339</span><span class="o">*</span><span class="nx">h</span><span class="o">+-</span><span class="mf">1.617</span><span class="o">*</span><span class="nx">d</span><span class="o">+-</span><span class="mf">0.4906</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">=-</span><span class="mf">0.9785</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">1.916</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mf">0.0333</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.072</span><span class="o">*</span><span class="nx">h</span><span class="o">+-</span><span class="mf">0.229</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mf">1.4057</span><span class="o">*</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mf">3.2406</span><span class="o">*</span><span class="nx">h</span><span class="o">+-</span><span class="mf">1.5372</span><span class="o">*</span><span class="nx">d</span><span class="o">+-</span><span class="mf">0.4986</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">=-</span><span class="mf">0.9689</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mf">1.8758</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mf">0.0415</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mf">0.0557</span><span class="o">*</span><span class="nx">h</span><span class="o">+-</span><span class="mf">0.204</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mf">1.057</span><span class="o">*</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">h</span><span class="p">)};</span><span class="nx">Ma</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getRgb</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="nx">ia</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getRgbItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">ia</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line"><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getRgbBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">ia</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="mi">3</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="mi">3</span><span class="p">},</span><span class="nx">getOutputLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">isPassthrough</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isPassthrough</span><span class="p">,</span><span class="nx">isDefaultDecode</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">usesZeroToOneRange</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">Ma</span><span class="p">;</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;should not call Pattern constructor&quot;</span><span class="p">)};</span><span class="nx">U</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getPattern</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call Pattern.getStyle: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)}};</span><span class="nx">U</span><span class="p">.</span><span class="nx">shadingFromIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]].</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">U</span><span class="p">.</span><span class="nx">parseShading</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;ShadingType&quot;</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">return</span> <span class="k">new</span> <span class="nx">N</span><span class="p">.</span><span class="nx">RadialAxial</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">L</span><span class="p">(</span><span class="s2">&quot;Unsupported shading type: &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span><span class="k">new</span> <span class="nx">N</span><span class="p">.</span><span class="nx">Dummy</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="p">{</span><span class="nx">SMALL_NUMBER</span><span class="o">:</span><span class="mf">0.01</span><span class="p">},</span><span class="nx">xb</span><span class="o">=</span><span class="nx">N</span><span class="p">,</span><span class="nx">ja</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Coords&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">shadingType</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;ShadingType&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;Pattern&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;ColorSpace&quot;</span><span class="p">,</span><span class="s2">&quot;CS&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">cs</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;Domain&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Domain&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;Extend&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Extend&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">shadingType</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line"><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">||!</span><span class="nx">g</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">((</span><span class="nx">h</span><span class="o">-</span><span class="nx">k</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">k</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">s</span><span class="p">));</span><span class="nx">m</span><span class="o">&lt;=</span><span class="nx">n</span><span class="o">+</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">&lt;=</span><span class="nx">m</span><span class="o">+</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Unsupported radial gradient.&quot;</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">extendStart</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">extendEnd</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Function&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">m</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">n</span><span class="p">]),</span><span class="nx">ta</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid function&quot;</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">));</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">a</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}</span><span class="k">else</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid function&quot;</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line"><span class="nx">m</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">colorStops</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">h</span><span class="p">)</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;Bad shading domain.&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">;</span><span class="nx">j</span><span class="o">+=</span><span class="nx">h</span><span class="p">)</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">m</span><span class="p">([</span><span class="nx">j</span><span class="p">]),</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([(</span><span class="nx">j</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">,</span><span class="nx">k</span><span class="p">]);</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;transparent&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;Background&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Background&quot;</span><span class="p">),</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">k</span><span class="p">));</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">]),</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">N</span><span class="p">.</span><span class="nx">SMALL_NUMBER</span><span class="p">);</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">N</span><span class="p">.</span><span class="nx">SMALL_NUMBER</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">]));</span><span class="k">this</span><span class="p">.</span><span class="nx">colorStops</span><span class="o">=</span><span class="nx">c</span><span class="p">}};</span><span class="nx">ja</span><span class="p">.</span><span class="nx">fromIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span><span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;Pattern&quot;</span><span class="p">,</span><span class="nx">getPattern</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">;</span><span class="mi">2</span><span class="o">==</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line"><span class="nx">b</span><span class="o">?</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createRadialGradient</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="o">++</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">j</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">])}</span><span class="k">return</span> <span class="nx">j</span><span class="p">}}};</span><span class="nx">ja</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">coordsArr</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadingType</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]],</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">])</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;getPattern type unknown: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;RadialAxial&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">colorStops</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line"><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">]}};</span><span class="nx">xb</span><span class="p">.</span><span class="nx">RadialAxial</span><span class="o">=</span><span class="nx">ja</span><span class="p">;</span><span class="kd">var</span> <span class="nx">yb</span><span class="o">=</span><span class="nx">N</span><span class="p">,</span><span class="nx">ka</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;Pattern&quot;</span><span class="p">};</span><span class="nx">ka</span><span class="p">.</span><span class="nx">fromIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;Pattern&quot;</span><span class="p">,</span><span class="nx">getPattern</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;hotpink&quot;</span><span class="p">}}};</span><span class="nx">ka</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;Dummy&quot;</span><span class="p">]}};</span><span class="nx">yb</span><span class="p">.</span><span class="nx">Dummy</span><span class="o">=</span><span class="nx">ka</span><span class="p">;</span><span class="kd">var</span> <span class="nx">la</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">bbox</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">xstep</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">ystep</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">paintType</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">7</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">tilingType</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;Pattern&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line"><span class="nx">c</span><span class="p">};</span><span class="nx">la</span><span class="p">.</span><span class="nx">getIR</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Matrix&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;BBox&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;XStep&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;YStep&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;PaintType&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;TilingType&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;TilingPattern&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">]};</span><span class="nx">la</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">createPatternCanvas</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bbox</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xstep</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ystep</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paintType</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">;</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;TilingType: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tilingType</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="o">+</span><span class="nx">e</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">singularValueDecompose2dScale</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line"><span class="nx">x</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">singularValueDecompose2dScale</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="p">),</span><span class="nx">v</span><span class="o">=</span><span class="p">[</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">l</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">l</span><span class="o">*</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="mi">3</span><span class="nx">E3</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">u</span><span class="o">*</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span><span class="mi">3</span><span class="nx">E3</span><span class="p">),</span><span class="nx">v</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">groupLevel</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">groupLevel</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setFillAndStrokeStyleToContext</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setScale</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">transformToScale</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="o">-</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]]);</span><span class="k">this</span><span class="p">.</span><span class="nx">clipBbox</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">executeOperatorList</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">canvas</span><span class="p">},</span><span class="nx">setScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="o">/</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="nx">d</span><span class="p">]},</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line"><span class="nx">transformToScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])},</span><span class="nx">scaleToContext</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">1</span><span class="o">/</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])},</span><span class="nx">clipBbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">4</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rectangle</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">clip</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">endPath</span><span class="p">())},</span><span class="nx">setFillAndStrokeStyleToContext</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">rgb</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unsupported paint type: &quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line"><span class="nx">b</span><span class="p">)}},</span><span class="nx">getPattern</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createPatternCanvas</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">scaleToContext</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createPattern</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;repeat&quot;</span><span class="p">)}};</span><span class="kd">var</span> <span class="nx">M</span><span class="p">;</span><span class="nx">M</span><span class="o">=</span><span class="p">{</span><span class="nx">getSampleArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">*=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getBytes</span><span class="p">((</span><span class="nx">e</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mi">7</span><span class="p">)</span><span class="o">/</span><span class="mi">8</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">g</span><span class="o">&lt;&lt;=</span><span class="mi">8</span><span class="p">,</span><span class="nx">g</span><span class="o">|=</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">b</span><span class="o">+=</span><span class="mi">8</span><span class="p">;</span><span class="nx">b</span><span class="o">-=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">g</span><span class="o">&gt;&gt;</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;=</span><span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">b</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dict</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line"><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">constructSampled</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constructInterpolated</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constructStiched</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">constructPostScript</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;FunctionType&quot;</span><span class="p">);(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unknown type of function&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">fromIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span> <span class="mi">0</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructSampledFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructInterpolatedFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructStichedFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">constructPostScriptFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIR</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">constructSampled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">]],</span><span class="o">++</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Domain&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Range&quot;</span><span class="p">);(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;No domain or range&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Size&quot;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;BitsPerSample&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Order&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="mi">1</span><span class="o">!==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;No support for cubic spline interpolation: &quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Encode&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="o">++</span><span class="nx">k</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Decode&quot;</span><span class="p">))</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getSampleArray</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line"><span class="nx">j</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">]},</span><span class="nx">constructSampledFromIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">9</span><span class="p">];</span><span class="nx">c</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Incorrect number of arguments: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot; != &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="nx">c</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float64Array</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint32Array</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">v</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="nx">p</span><span class="p">),</span><span class="nx">x</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="nx">p</span><span class="p">)</span><span class="o">*</span><span class="p">((</span><span class="nx">e</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">x</span><span class="o">-</span><span class="nx">p</span><span class="p">)),</span><span class="nx">x</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">x</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">x</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="nx">q</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="o">-</span><span class="nx">p</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">u</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">w</span><span class="o">+</span><span class="nx">u</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="nx">p</span><span class="o">&amp;</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line"><span class="nx">r</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">*=</span><span class="nx">q</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">+=</span><span class="nx">z</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">*=</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">+=</span><span class="nx">w</span><span class="p">);</span><span class="nx">u</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;&lt;=</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float64Array</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">+=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">+</span><span class="nx">p</span><span class="p">]</span><span class="o">*</span><span class="nx">s</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="p">((</span><span class="nx">f</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">0</span><span class="p">]),</span><span class="nx">m</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">1</span><span class="p">])}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}},</span><span class="nx">constructInterpolated</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;C0&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;C1&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;N&quot;</span><span class="p">);(</span><span class="o">!</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||!</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Illegal dictionary for interpolated function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">-</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">return</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">]},</span><span class="nx">constructInterpolatedFromIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line"><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}},</span><span class="nx">constructStiched</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Domain&quot;</span><span class="p">))</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;No domain&quot;</span><span class="p">);</span><span class="mi">1</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Bad domain for stiched function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Functions&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">getIR</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">])));</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Bounds&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Encode&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">]},</span><span class="nx">constructStichedFromIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]));</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line"><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="o">:</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="o">++</span><span class="nx">f</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]([</span><span class="nx">s</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">s</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">g</span><span class="p">)])}},</span><span class="nx">constructPostScript</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Domain&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Range&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;No domain.&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;No range.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">e</span><span class="p">)).</span><span class="nx">parse</span><span class="p">();</span><span class="k">return</span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">]},</span><span class="nx">constructPostScriptFromIR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Pa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qa</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line"><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">execute</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">j</span><span class="p">;</span><span class="o">--</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">j</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">:</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span><span class="nx">m</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="nx">f</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="p">}}};</span><span class="kd">var</span> <span class="nx">Qa</span><span class="p">,</span><span class="nx">Ra</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="mi">0</span><span class="p">};</span><span class="nx">Ra</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">cache</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="mi">1024</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">++</span><span class="p">)}};</span><span class="nx">Qa</span><span class="o">=</span><span class="nx">Ra</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Sa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">[]};</span><span class="nx">Sa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">push</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="mi">100</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line"><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;PostScript function stack overflow.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">pop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="mi">0</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;PostScript function stack underflow.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">pop</span><span class="p">()},</span><span class="nx">copy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="mi">100</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;PostScript function stack overflow.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">-=</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">,</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">index</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">])},</span><span class="nx">roll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="o">--</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line"><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="o">--</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="o">--</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">Pa</span><span class="p">,</span><span class="nx">Ta</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operands</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">Ta</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">execute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Sa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">],</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;jz&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">())</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;j&quot;</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;abs&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;add&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;and&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;atan&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;bitshift&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;&lt;</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;&gt;</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ceiling&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;copy&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;cos&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;cvi&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;cvr&quot;</span><span class="o">:</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;div&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;dup&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;eq&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;exch&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">roll</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line"><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;exp&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;false&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;floor&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ge&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;gt&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;idiv&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">/</span><span class="nx">f</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;index&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;le&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ln&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;log&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;lt&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;mod&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">%</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;mul&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ne&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;neg&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">-</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;not&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;or&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">|</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;pop&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;roll&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">roll</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;round&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;sin&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;sqrt&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;sub&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;true&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;truncate&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;xor&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">!=</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">^</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unknown operator &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">stack</span><span class="p">}};</span><span class="nx">Pa</span><span class="o">=</span><span class="nx">Ta</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Oa</span><span class="p">,</span><span class="nx">Ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lexer</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">token</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">Ua</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">nextToken</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">prev</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">token</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">token</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">lexer</span><span class="p">.</span><span class="nx">getToken</span><span class="p">()},</span><span class="nx">accept</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">token</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nextToken</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">expect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unexpected symbol: found &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">token</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot; expected &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">)},</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">nextToken</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">expect</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">LBRACE</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">parseBlock</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">expect</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">RBRACE</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">},</span><span class="nx">parseBlock</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;;)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">NUMBER</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prev</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">OPERATOR</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prev</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">LBRACE</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">parseCondition</span><span class="p">();</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line"><span class="k">else</span> <span class="k">break</span><span class="p">},</span><span class="nx">parseCondition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">parseBlock</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">expect</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">RBRACE</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">IF</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;jz&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">accept</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">LBRACE</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parseBlock</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">expect</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">RBRACE</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">expect</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">IFELSE</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;j&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operators</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line"><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;jz&quot;</span><span class="p">}</span><span class="k">else</span> <span class="nx">l</span><span class="p">(</span><span class="s2">&quot;PS Function: error parsing conditional.&quot;</span><span class="p">)}};</span><span class="nx">Oa</span><span class="o">=</span><span class="nx">Ua</span><span class="p">;</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="p">{</span><span class="nx">LBRACE</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">RBRACE</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">NUMBER</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">OPERATOR</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">IF</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">IFELSE</span><span class="o">:</span><span class="mi">5</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">Va</span><span class="o">=</span><span class="p">{};</span><span class="nx">A</span><span class="p">.</span><span class="nx">getOperator</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Va</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">Va</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">OPERATOR</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">A</span><span class="p">.</span><span class="nx">LBRACE</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">LBRACE</span><span class="p">,</span><span class="s2">&quot;{&quot;</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">RBRACE</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">RBRACE</span><span class="p">,</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">IF</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">IF</span><span class="p">,</span><span class="s2">&quot;IF&quot;</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">IFELSE</span><span class="o">=</span><span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">IFELSE</span><span class="p">,</span><span class="s2">&quot;IFELSE&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Na</span><span class="p">,</span><span class="nx">Wa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">stream</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">()};</span><span class="nx">Wa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">nextChar</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentChar</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stream</span><span class="p">.</span><span class="nx">getByte</span><span class="p">()},</span><span class="nx">getToken</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentChar</span><span class="p">;;){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">EOF</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">10</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="mi">13</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">37</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Lexer</span><span class="p">.</span><span class="nx">isSpace</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">()}</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="o">|</span><span class="mi">0</span><span class="p">){</span><span class="k">case</span> <span class="mi">48</span><span class="o">:</span><span class="k">case</span> <span class="mi">49</span><span class="o">:</span><span class="k">case</span> <span class="mi">50</span><span class="o">:</span><span class="k">case</span> <span class="mi">51</span><span class="o">:</span><span class="k">case</span> <span class="mi">52</span><span class="o">:</span><span class="k">case</span> <span class="mi">53</span><span class="o">:</span><span class="k">case</span> <span class="mi">54</span><span class="o">:</span><span class="k">case</span> <span class="mi">55</span><span class="o">:</span><span class="k">case</span> <span class="mi">56</span><span class="o">:</span><span class="k">case</span> <span class="mi">57</span><span class="o">:</span><span class="k">case</span> <span class="mi">43</span><span class="o">:</span><span class="k">case</span> <span class="mi">45</span><span class="o">:</span><span class="k">case</span> <span class="mi">46</span><span class="o">:</span><span class="k">return</span> <span class="k">new</span> <span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">NUMBER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNumber</span><span class="p">());</span><span class="k">case</span> <span class="mi">123</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">(),</span><span class="nx">A</span><span class="p">.</span><span class="nx">LBRACE</span><span class="p">;</span><span class="k">case</span> <span class="mi">125</span><span class="o">:</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">(),</span><span class="nx">A</span><span class="p">.</span><span class="nx">RBRACE</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">65</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">90</span><span class="o">&gt;=</span><span class="nx">b</span><span class="o">||</span><span class="mi">97</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">122</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">);)</span><span class="nx">a</span><span class="o">+=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span> <span class="s2">&quot;if&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nx">IF</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line"><span class="k">case</span> <span class="s2">&quot;ifelse&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nx">IFELSE</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nx">getOperator</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">getNumber</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentChar</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nextChar</span><span class="p">());)</span><span class="k">if</span><span class="p">(</span><span class="mi">48</span><span class="o">&lt;=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">57</span><span class="o">&gt;=</span><span class="nx">a</span><span class="o">||</span><span class="mi">45</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="mi">46</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">break</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid floating point number: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}};</span><span class="nx">Na</span><span class="o">=</span><span class="nx">Wa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="p">.</span><span class="nx">subtype</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Subtype&quot;</span><span class="p">).</span><span class="nx">name</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Rect&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">normalizeRect</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">annotationFlags</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;F&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;C&quot;</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;BS&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;BS&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderWidth</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;W&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;W&quot;</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Border&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderWidth</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;AP&quot;</span><span class="p">);</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;N&quot;</span><span class="p">),</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;AS&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAppearance</span><span class="o">=!!</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">getData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">},</span><span class="nx">hasHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">getHtmlElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">S</span><span class="p">(</span><span class="s2">&quot;getHtmlElement() should be implemented in subclass&quot;</span><span class="p">);},</span><span class="nx">getEmptyContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="nx">R</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;getEmptyContainer() should be called from main thread&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">rect</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">isViewable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">annotationFlags</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">annotationFlags</span><span class="o">&amp;</span><span class="mi">34</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="p">)},</span><span class="nx">loadResources</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">.</span><span class="nx">dict</span><span class="p">.</span><span class="nx">getAsync</span><span class="p">(</span><span class="s2">&quot;Resources&quot;</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="k">new</span> <span class="nx">ObjectLoader</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">map</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">xref</span><span class="p">)).</span><span class="nx">load</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">c</span><span class="p">)})</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">()}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">));</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line"><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">getOperatorList</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="k">new</span> <span class="nx">OperatorList</span><span class="p">),</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">.</span><span class="nx">dict</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadResources</span><span class="p">(</span><span class="s2">&quot;ExtGState ColorSpace Pattern Shading XObject Font&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;BBox&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Matrix&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">h</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getAxialAlignedBoundingBox</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">f</span><span class="o">===</span><span class="nx">k</span><span class="o">||</span><span class="nx">m</span><span class="o">===</span><span class="nx">j</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span><span class="o">:</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">f</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">m</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="nx">k</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">j</span><span class="p">]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line"><span class="k">new</span> <span class="nx">OperatorList</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">addOp</span><span class="p">(</span><span class="s2">&quot;beginAnnotation&quot;</span><span class="p">,[</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">getOperatorList</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">addOp</span><span class="p">(</span><span class="s2">&quot;endAnnotation&quot;</span><span class="p">,[]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">e</span><span class="p">)}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="p">}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">getConstructor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;Link&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">Xa</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;Text&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">Ya</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;Widget&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;Tx&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">Za</span><span class="o">:</span><span class="nx">X</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">z</span><span class="p">}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">fromData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">getConstructor</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">subtype</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fieldType</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">b</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="nx">a</span><span class="p">})};</span><span class="nx">z</span><span class="p">.</span><span class="nx">fromRef</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fetchIfRef</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Subtype&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line"><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;FT&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">getConstructor</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">({</span><span class="nx">dict</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">ref</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isViewable</span><span class="p">())</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;unimplemented annotation type: &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">)}}}};</span><span class="nx">z</span><span class="p">.</span><span class="nx">appendToOperatorList</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">getOperatorList</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">addOp</span><span class="p">(</span><span class="s2">&quot;beginAnnotations&quot;</span><span class="p">,[]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">addOpList</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addOp</span><span class="p">(</span><span class="s2">&quot;endAnnotations&quot;</span><span class="p">,[]);</span><span class="nx">e</span><span class="p">.</span><span class="nx">resolve</span><span class="p">()},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Annotation</span><span class="o">=</span><span class="nx">z</span><span class="p">;</span><span class="kd">var</span> <span class="nx">X</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line"><span class="nx">$a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fieldValue</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;V&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">alternativeText</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;TU&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultAppearance</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;DA&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;FT&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">fieldType</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">fieldFlags</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;Ff&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fieldResources</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;DR&quot;</span><span class="p">)</span><span class="o">||</span><span class="k">new</span> <span class="nx">Dict</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ref</span><span class="p">;</span><span class="nx">e</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Parent&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getRaw</span><span class="p">(</span><span class="s2">&quot;Parent&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;T&quot;</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">Q</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Kids&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">num</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">num</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">gen</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">gen</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="s2">&quot;`&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">fullName</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)}},</span><span class="nx">zb</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">r</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">$a</span><span class="p">,</span><span class="nx">z</span><span class="p">,{</span><span class="nx">isViewable</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Sig&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">fieldType</span><span class="o">?</span><span class="p">(</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;unimplemented annotation type: Widget signature&quot;</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">zb</span><span class="p">.</span><span class="nx">isViewable</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}});</span><span class="nx">X</span><span class="o">=</span><span class="nx">$a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Za</span><span class="p">,</span><span class="nx">ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">X</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">textAlignment</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getInheritableProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">,</span><span class="s2">&quot;Q&quot;</span><span class="p">))};</span><span class="nx">r</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">ab</span><span class="p">,</span><span class="nx">X</span><span class="p">,{</span><span class="nx">hasHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">hasAppearance</span><span class="o">&amp;&amp;!!</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">fieldValue</span><span class="p">},</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line"><span class="nx">getHtmlElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="o">!</span><span class="nx">R</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;getHtmlElement() shall be called from main thread&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEmptyContainer</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;table&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fieldValue</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">][</span><span class="nx">b</span><span class="p">.</span><span class="nx">textAlignment</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;table-cell&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontRefName</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontRefName</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">direction</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">?</span><span class="s2">&quot;rtl&quot;</span><span class="o">:</span><span class="s2">&quot;ltr&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontWeight</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">black</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">bold</span><span class="o">?</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line"><span class="s2">&quot;bolder&quot;</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">bold</span><span class="o">?</span><span class="s2">&quot;bold&quot;</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">italic</span><span class="o">?</span><span class="s2">&quot;italic&quot;</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">loadedName</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontFamily</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s1">&#39;&quot;, &#39;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">fallbackName</span><span class="o">||</span><span class="s2">&quot;Helvetica, sans-serif&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getOperatorList</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">appearance</span><span class="p">)</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getOperatorList</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">OperatorList</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaultAppearance</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Stream</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">getOperatorList</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fieldResources</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line"><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fnArray</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">argsArray</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="s2">&quot;setFont&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontRefName</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=-</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;setFillRGBColor&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb</span><span class="o">=</span><span class="nx">h</span><span class="o">:</span><span class="s2">&quot;setFillGray&quot;</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">255</span><span class="o">*</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb</span><span class="o">=</span><span class="p">[</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}});</span><span class="nx">Za</span><span class="o">=</span><span class="nx">ab</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ya</span><span class="p">,</span><span class="nx">bb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Contents&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;T&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">content</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="o">=!</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;Name&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;Note&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Name&quot;</span><span class="p">).</span><span class="nx">name</span><span class="p">}};</span><span class="nx">r</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">bb</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line"><span class="p">{</span><span class="nx">getOperatorList</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="k">new</span> <span class="nx">OperatorList</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">hasHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">getHtmlElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">R</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;getHtmlElement() shall be called from main thread&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="p">;</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="mi">10</span><span class="p">);</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEmptyContainer</span><span class="p">(</span><span class="s2">&quot;section&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;annotText&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">imageResourcesPath</span><span class="o">+</span><span class="s2">&quot;annotation-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;.svg&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">alt</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line"><span class="s2">&quot;[{{type}} Annotation]&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">l10nId</span><span class="o">=</span><span class="s2">&quot;text_annotation_type&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">l10nArgs</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;h1&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">content</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">title</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/(?:\r\n?|\n)/</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">])),</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line"><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;br&quot;</span><span class="p">));</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;hidden&quot;</span><span class="p">)};</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toElement</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">-=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">f</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}});</span><span class="nx">Ya</span><span class="o">=</span><span class="nx">bb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Xa</span><span class="p">,</span><span class="nx">cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">z</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">dict</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;A&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;S&quot;</span><span class="p">).</span><span class="nx">name</span><span class="p">,</span><span class="s2">&quot;URI&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;URI&quot;</span><span class="p">);</span><span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">else</span><span class="s2">&quot;GoTo&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">dest</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;D&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;GoToR&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;F&quot;</span><span class="p">),</span><span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;F&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">$</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dest</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;D&quot;</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;Named&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">action</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;N&quot;</span><span class="p">).</span><span class="nx">name</span><span class="o">:</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;unrecognized link type: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s2">&quot;Dest&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;Dest&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">dest</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">name</span><span class="o">:</span><span class="nx">d</span><span class="p">)}};</span><span class="nx">r</span><span class="p">.</span><span class="nx">inherit</span><span class="p">(</span><span class="nx">cb</span><span class="p">,</span><span class="nx">z</span><span class="p">,{</span><span class="nx">hasOperatorList</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">hasHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">getHtmlElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">rect</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line"><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderWidth</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderStyle</span><span class="o">=</span><span class="s2">&quot;solid&quot;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">url</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}});</span><span class="nx">Xa</span><span class="o">=</span><span class="nx">cb</span><span class="p">;</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">maxImageSize</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">maxImageSize</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">maxImageSize</span><span class="p">;</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="p">;</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">getDocument</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line"><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;byteLength&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid parameter in getDocument, need either Uint8Array, string or a parameter object&quot;</span><span class="p">);</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Invalid parameter array, need either .data or .url&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;url&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">?</span><span class="nx">sb</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">fetchDocument</span><span class="p">(</span><span class="nx">g</span><span class="p">)});</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line"><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="kd">var</span> <span class="nx">eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">eb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span> <span class="nx">numPages</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">numPages</span><span class="p">},</span><span class="nx">get</span> <span class="nx">fingerprint</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">fingerprint</span><span class="p">},</span><span class="nx">get</span> <span class="nx">embeddedFontsUsed</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">embeddedFontsUsed</span><span class="p">},</span><span class="nx">getPage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">getPage</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getDestinations</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">getDestinations</span><span class="p">()},</span><span class="nx">getJavaScript</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">javaScript</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getOutline</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">outline</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getMetadata</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">metadata</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">({</span><span class="nx">info</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">info</span><span class="p">,</span><span class="nx">metadata</span><span class="o">:</span><span class="nx">b</span><span class="o">?</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Metadata</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">isEncrypted</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">.</span><span class="nx">encrypted</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">getData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">dataLoaded</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">dataLoaded</span><span class="p">()},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}};</span><span class="kd">var</span> <span class="nx">fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line"><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stats</span><span class="o">=</span><span class="k">new</span> <span class="nx">za</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stats</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!!</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">enableStats</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="k">new</span> <span class="nx">na</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cleanupAfterRender</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">receivingOperatorList</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTasks</span><span class="o">=</span><span class="p">[]};</span><span class="nx">fb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span> <span class="nx">pageNumber</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">.</span><span class="nx">pageIndex</span><span class="o">+</span><span class="mi">1</span><span class="p">},</span><span class="nx">get</span> <span class="nx">rotate</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">.</span><span class="nx">rotate</span><span class="p">},</span><span class="nx">get</span> <span class="nx">ref</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">.</span><span class="nx">ref</span><span class="p">},</span><span class="nx">get</span> <span class="nx">view</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">.</span><span class="nx">view</span><span class="p">},</span><span class="nx">getViewport</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="mi">2</span><span class="o">&gt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rotate</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">PageViewport</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">view</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line"><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getAnnotations</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">annotationsPromise</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">annotationsPromise</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">annotationsPromise</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">getAnnotations</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">cleanupAfterRender</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">_tryDestroy</span><span class="p">();</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">resolve</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="s2">&quot;Rendering&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="s2">&quot;Overall&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stats</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="s2">&quot;Overall&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="o">||</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line"><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">receivingOperatorList</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="o">=</span><span class="p">{</span><span class="nx">fnArray</span><span class="o">:</span><span class="p">[],</span><span class="nx">argsArray</span><span class="o">:</span><span class="p">[],</span><span class="nx">lastChunk</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">stats</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="s2">&quot;Page Request&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;RenderPageRequest&quot;</span><span class="p">,{</span><span class="nx">pageIndex</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">pageNumber</span><span class="o">-</span><span class="mi">1</span><span class="p">}));</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">gb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pageNumber</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">hb</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">(</span><span class="s2">&quot;Rendering&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">initalizeGraphics</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">operatorListChanged</span><span class="p">())},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line"><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">getTextContent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">transport</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetTextContent&quot;</span><span class="p">,{</span><span class="nx">pageIndex</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">pageNumber</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getOperationList</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">({</span><span class="nx">dependencyFontsID</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">operatorList</span><span class="o">:</span><span class="kc">null</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_tryDestroy</span><span class="p">()},</span><span class="nx">_tryDestroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">receivingOperatorList</span><span class="p">))</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">,</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">.</span><span class="nx">clear</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingDestroy</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">_startRenderPage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">_renderPageChunk</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">concatenateToArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">.</span><span class="nx">fnArray</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fnArray</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">concatenateToArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">.</span><span class="nx">argsArray</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">argsArray</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">.</span><span class="nx">lastChunk</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChunk</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTasks</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">operatorListChanged</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastChunk</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">receivingOperatorList</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_tryDestroy</span><span class="p">())}};</span><span class="kd">var</span> <span class="nx">db</span><span class="p">,</span><span class="nx">ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfDataRangeTransport</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line"><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">progressCallback</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="o">=</span><span class="k">new</span> <span class="nx">na</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">embeddedFontsUsed</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableWorker</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">Worker</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">workerSrc</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;No PDFJS.workerSrc specified&quot;</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">new</span> <span class="nx">Worker</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;main&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">worker</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">setupMessageHandler</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableWorker</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">setupFakeWorker</span><span class="p">());</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">()}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">));</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line"><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;The worker has been disabled.&quot;</span><span class="p">)}}</span><span class="nx">w</span><span class="p">.</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableWorker</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">loadFakeWorkerFiles</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setupFakeWorker</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">()}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">))};</span><span class="nx">ib</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;Terminate&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">worker</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">worker</span><span class="p">.</span><span class="nx">terminate</span><span class="p">()})},</span><span class="nx">loadFakeWorkerFiles</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">fakeWorkerFilesLoadedPromise</span><span class="o">||</span><span class="p">(</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">fakeWorkerFilesLoadedPromise</span><span class="o">=</span><span class="k">new</span> <span class="nx">C</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">loadScript</span><span class="p">(</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">workerSrc</span><span class="p">));</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line"><span class="k">return</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">fakeWorkerFilesLoadedPromise</span><span class="p">},</span><span class="nx">setupFakeWorker</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Setting up fake worker.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">postMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onmessage</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">terminate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}},</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">aa</span><span class="p">(</span><span class="s2">&quot;main&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setupMessageHandler</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">WorkerMessageHandler</span><span class="p">.</span><span class="nx">setup</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setupMessageHandler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;UpdatePassword&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfDataRangeTransport</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">addRangeListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;OnDataRange&quot;</span><span class="p">,{</span><span class="nx">begin</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">chunk</span><span class="o">:</span><span class="nx">c</span><span class="p">})}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">addProgressListener</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;OnDataProgress&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line"><span class="p">{</span><span class="nx">loaded</span><span class="o">:</span><span class="nx">b</span><span class="p">})}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;RequestDataRange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">requestDataRange</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">begin</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="p">)},</span><span class="k">this</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;GetDoc&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfDocument</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">eb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pdfInfo</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;NeedPassword&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">wa</span><span class="p">.</span><span class="nx">NEED_PASSWORD</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;IncorrectPassword&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">passwordCallback</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">wa</span><span class="p">.</span><span class="nx">INCORRECT_PASSWORD</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line"><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;InvalidPDF&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;MissingPDF&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;UnknownError&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">exception</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;GetPage&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageInfo</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">].</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;GetAnnotations&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">].</span><span class="nx">annotationsPromise</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">annotations</span><span class="p">)},</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line"><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;StartRenderPage&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">stats</span><span class="p">.</span><span class="nx">timeEnd</span><span class="p">(</span><span class="s2">&quot;Page Request&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">_startRenderPage</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">transparency</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;RenderPageChunk&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageIndex</span><span class="p">].</span><span class="nx">_renderPageChunk</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;commonobj&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">.</span><span class="nx">hasData</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;Font&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">;</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Error during font loading: &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">jb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">bind</span><span class="p">([</span><span class="nx">g</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line"><span class="nx">g</span><span class="p">)}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;FontPath&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;Got unknown common object type &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)}},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;obj&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">objs</span><span class="p">.</span><span class="nx">hasData</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;JpegStream&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">j</span><span class="p">)};</span><span class="nx">j</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;data:image/jpeg;base64,&quot;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;Image&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">objs</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="s2">&quot;data&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">8</span><span class="nx">E6</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">cleanupAfterRender</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Got unknown object type &quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="nx">c</span><span class="p">)}},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;DocProgress&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">progressCallback</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">progressCallback</span><span class="p">({</span><span class="nx">loaded</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">loaded</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">total</span><span class="p">})},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;DocError&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">workerReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;PageError&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCache</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageNum</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">displayReadyPromise</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">)},</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;JpegDecode&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="mi">3</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Only 3 component or 1 component can be returned&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line"><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">4</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">3</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">p</span><span class="o">+=</span><span class="mi">4</span><span class="p">,</span><span class="nx">u</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">u</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">u</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="o">+</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">p</span><span class="o">+=</span><span class="mi">4</span><span class="p">,</span><span class="nx">u</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">})}.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;data:image/jpeg;base64,&quot;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">c</span><span class="p">})},</span><span class="nx">fetchDocument</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">disableAutoFetch</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableAutoFetch</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">chunkedViewerLoading</span><span class="o">=!!</span><span class="k">this</span><span class="p">.</span><span class="nx">pdfDataRangeTransport</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetDocRequest&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line"><span class="p">{</span><span class="nx">source</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">disableRange</span><span class="o">:</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableRange</span><span class="p">,</span><span class="nx">maxImageSize</span><span class="o">:</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">maxImageSize</span><span class="p">,</span><span class="nx">disableFontFace</span><span class="o">:</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="p">})},</span><span class="nx">getData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetData&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">dataLoaded</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;DataLoaded&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getPage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">(</span><span class="s2">&quot;Page &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pagePromises</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetPageRequest&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line"><span class="p">{</span><span class="nx">pageIndex</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">getAnnotations</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetAnnotationsRequest&quot;</span><span class="p">,{</span><span class="nx">pageIndex</span><span class="o">:</span><span class="nx">a</span><span class="p">})},</span><span class="nx">getDestinations</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">PDFJS</span><span class="p">.</span><span class="nx">Promise</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">messageHandler</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s2">&quot;GetDestinations&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}};</span><span class="nx">db</span><span class="o">=</span><span class="nx">ib</span><span class="p">;</span><span class="kd">var</span> <span class="nx">na</span><span class="p">,</span><span class="nx">kb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="p">{}};</span><span class="nx">kb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">ensureObj</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">promise</span><span class="o">:</span><span class="k">new</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">data</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">resolved</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">ensureObj</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">promise</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line"><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">[</span><span class="nx">a</span><span class="p">];(</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolved</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Requesting object that isn&#39;t resolved yet &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">},</span><span class="nx">resolve</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ensureObj</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">resolved</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">promise</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">isResolved</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">resolved</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">hasData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||!</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">resolved</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">data</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="p">{}}};</span><span class="nx">na</span><span class="o">=</span><span class="nx">kb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">hb</span><span class="p">,</span><span class="nx">oa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">internalRenderTask</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">oa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line"><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span><span class="nx">oa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">cancel</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">internalRenderTask</span><span class="p">.</span><span class="nx">cancel</span><span class="p">()};</span><span class="nx">hb</span><span class="o">=</span><span class="nx">oa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">gb</span><span class="p">,</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorListIdx</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pageNumber</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReadyCallback</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelled</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReady</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="nx">lb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">initalizeGraphics</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelled</span><span class="p">){</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">pdfBug</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;StepperManager&quot;</span><span class="k">in</span> <span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">StepperManager</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">StepperManager</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pageNumber</span><span class="o">-</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line"><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="p">.</span><span class="nx">nextBreakPoint</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="p">.</span><span class="nx">getNextBreakPoint</span><span class="p">());</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">gfx</span><span class="o">=</span><span class="k">new</span> <span class="nx">ma</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvasContext</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">textLayer</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">gfx</span><span class="p">.</span><span class="nx">beginDrawing</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">viewport</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorListIdx</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReady</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReadyCallback</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReadyCallback</span><span class="p">()}},</span><span class="nx">cancel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelled</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="p">(</span><span class="s2">&quot;cancelled&quot;</span><span class="p">)},</span><span class="nx">operatorListChanged</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReady</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="p">.</span><span class="nx">updateOperatorList</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_continue</span><span class="p">())</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReadyCallback</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graphicsReadyCallback</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_continue</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">))},</span><span class="nx">_continue</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelled</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">continueCallback</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">continueCallback</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">())},</span><span class="nx">_next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelled</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorListIdx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gfx</span><span class="p">.</span><span class="nx">executeOperatorList</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorListIdx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_continue</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">stepper</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorListIdx</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">.</span><span class="nx">fnArray</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">running</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">.</span><span class="nx">lastChunk</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gfx</span><span class="p">.</span><span class="nx">endDrawing</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="p">())))}};</span><span class="nx">gb</span><span class="o">=</span><span class="nx">lb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Ab</span><span class="o">=</span><span class="nx">PDFJS</span><span class="p">,</span><span class="nx">mb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&gt;\\376\\377([^&lt;]+)/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\([0-3])([0-7])([0-7])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="mi">64</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">8</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="o">*</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">256</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;&amp;#x&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">65536</span><span class="o">+</span><span class="nx">g</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;&gt;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">}),</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nx">DOMParser</span><span class="p">).</span><span class="nx">parseFromString</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;application/xml&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Document</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Metadata: Invalid metadata object&quot;</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">metaDocument</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">metadata</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">parse</span><span class="p">()};</span><span class="nx">mb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">metaDocument</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;rdf:rdf&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;rdf:rdf&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;rdf:rdf&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasChildNodes</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="s2">&quot;rdf:description&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="s2">&quot;#text&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line"><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">metadata</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nx">trim</span><span class="p">())}}},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">metadata</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">metadata</span><span class="p">[</span><span class="nx">a</span><span class="p">]}};</span><span class="nx">Ab</span><span class="p">.</span><span class="nx">Metadata</span><span class="o">=</span><span class="nx">mb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="p">{};</span><span class="nx">F</span><span class="o">=</span><span class="p">{</span><span class="nx">getCanvas</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">Y</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">ua</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">va</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">Y</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">canvas</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">context</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Y</span><span class="o">=</span><span class="p">{}}};</span><span class="kd">var</span> <span class="nx">pa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">alphaIsShape</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">fontSizeScale</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textMatrix</span><span class="o">=</span><span class="nx">xa</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="o">=</span><span class="nx">ba</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wordSpacing</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">charSpacing</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineY</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lineX</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">leading</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textHScale</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textRise</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textRenderingMode</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">gray</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColorSpaceObj</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">gray</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColorObj</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColorObj</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColorSpaceObj</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="s2">&quot;#000000&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeAlpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">fillAlpha</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">paintFormXObjectDepth</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">old</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code js-file-line"><span class="nx">a</span><span class="p">};</span><span class="nx">pa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">clone</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">setCurrentPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">ma</span><span class="p">,</span><span class="nx">nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="k">new</span> <span class="nx">pa</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stateStack</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xobjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">res</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">groupStack</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">processingType3</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransformStack</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">groupLevel</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">va</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">ImageData</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">instanceof</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code js-file-line"><span class="nx">ImageData</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">putImageData</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createImageData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;set&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">putImageData</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">Bb</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;butt&quot;</span><span class="p">,</span><span class="s2">&quot;round&quot;</span><span class="p">,</span><span class="s2">&quot;square&quot;</span><span class="p">],</span><span class="nx">Cb</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;miter&quot;</span><span class="p">,</span><span class="s2">&quot;round&quot;</span><span class="p">,</span><span class="s2">&quot;bevel&quot;</span><span class="p">],</span><span class="nx">Db</span><span class="o">=</span><span class="p">{},</span><span class="nx">ob</span><span class="o">=</span><span class="p">{};</span><span class="nx">nb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">slowCommands</span><span class="o">:</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">closeStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">fill</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">eoFill</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">fillStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">eoFillStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">closeFillStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">closeEOFillStroke</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showText</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showSpacedText</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeColorSpace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setFillColorSpace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeColorN</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code js-file-line"><span class="nx">setFillColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setFillColorN</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeGray</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setFillGray</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeRGBColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setFillRGBColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setStrokeCMYKColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">setFillCMYKColor</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintJpegXObject</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintImageXObject</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintInlineImageXObject</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintInlineImageXObjectGroup</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintImageMaskXObject</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">paintImageMaskXObjectGroup</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">shadingFill</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">beginDrawing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozOpaque</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="s2">&quot;rgb(255, 255, 255)&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="p">.</span><span class="nx">beginLayout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">.</span><span class="nx">beginLayout</span><span class="p">()},</span><span class="nx">executeOperatorList</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">argsArray</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fnArray</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">+</span><span class="mi">15</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">slowCommands</span><span class="p">;;){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextBreakPoint</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">breakIt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;dependency&quot;</span><span class="o">!==</span><span class="nx">m</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code js-file-line"><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;g_&quot;</span><span class="o">==</span><span class="nx">u</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="nx">j</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">(</span><span class="nx">u</span><span class="p">))</span><span class="k">return</span> <span class="nx">j</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">.</span><span class="nx">isResolved</span><span class="p">(</span><span class="nx">u</span><span class="p">))</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">}</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">}},</span><span class="nx">endDrawing</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">F</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="p">.</span><span class="nx">endLayout</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">.</span><span class="nx">endLayout</span><span class="p">()},</span><span class="nx">setLineWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setLineCap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineCap</span><span class="o">=</span><span class="nx">Bb</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code js-file-line"><span class="nx">setLineJoin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineJoin</span><span class="o">=</span><span class="nx">Cb</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">setMiterLimit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">miterLimit</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setDash</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="s2">&quot;setLineDash&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">setLineDash</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineDashOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">mozDash</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">mozDashOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setRenderingIntent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">setFlatness</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">setGState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span> <span class="s2">&quot;LW&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setLineWidth</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;LC&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setLineCap</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;LJ&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setLineJoin</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ML&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setMiterLimit</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code js-file-line"><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;D&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setDash</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;RI&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setRenderingIntent</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;FL&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setFlatness</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;Font&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setFont</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;CA&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeAlpha</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;ca&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillAlpha</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;BM&quot;</span><span class="o">:</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Normal&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([A-Z])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()}).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="s1">&#39;globalCompositeOperation &quot;&#39;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code js-file-line"><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot; is not supported&#39;</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="s2">&quot;source-over&quot;</span><span class="p">}}},</span><span class="nx">save</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stateStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clone</span><span class="p">()},</span><span class="nx">restore</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stateStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">restore</span><span class="p">())},</span><span class="nx">transform</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="nx">moveTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">setCurrentPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">lineTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">setCurrentPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">curveTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code js-file-line"><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">setCurrentPoint</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="nx">curveTo2</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">bezierCurveTo</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">setCurrentPoint</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">curveTo3</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">curveTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">setCurrentPoint</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">closePath</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">closePath</span><span class="p">()},</span><span class="nx">rectangle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">stroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="p">;</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">getSinglePixelWidth</span><span class="p">());</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeAlpha</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPattern</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">consumePath</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">globalAlpha</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillAlpha</span><span class="p">},</span><span class="nx">closeStroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">stroke</span><span class="p">()},</span><span class="nx">fill</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPattern</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code js-file-line"><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;mozFillRule&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozFillRule</span><span class="o">=</span><span class="s2">&quot;evenodd&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozFillRule</span><span class="o">=</span><span class="s2">&quot;nonzero&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">(</span><span class="s2">&quot;evenodd&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">()}</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">consumePath</span><span class="p">()},</span><span class="nx">eoFill</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fill</span><span class="p">()},</span><span class="nx">fillStroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">fill</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">consumePath</span><span class="p">()},</span><span class="nx">eoFillStroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fillStroke</span><span class="p">()},</span><span class="nx">closeFillStroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">fillStroke</span><span class="p">()},</span><span class="nx">closeEOFillStroke</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingEOFill</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">closePath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">fillStroke</span><span class="p">()},</span><span class="nx">endPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">consumePath</span><span class="p">()},</span><span class="nx">clip</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="o">=</span><span class="nx">Db</span><span class="p">},</span><span class="nx">eoClip</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="o">=</span><span class="nx">ob</span><span class="p">},</span><span class="nx">beginText</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">textMatrix</span><span class="o">=</span><span class="nx">xa</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineY</span><span class="o">=</span><span class="mi">0</span><span class="p">},</span><span class="nx">endText</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;pendingTextPaths&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingTextPaths</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code js-file-line"><span class="nx">d</span><span class="p">.</span><span class="nx">transform</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">addToPath</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">pendingTextPaths</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()},</span><span class="nx">setCharSpacing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">charSpacing</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setWordSpacing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">wordSpacing</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setHScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">textHScale</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">100</span><span class="p">},</span><span class="nx">setLeading</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">leading</span><span class="o">=-</span><span class="nx">a</span><span class="p">},</span><span class="nx">setFont</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Can&#39;t find font for &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="o">:</span><span class="nx">ba</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code js-file-line"><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Invalid font matrix for font &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">coded</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">black</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">bold</span><span class="o">?</span><span class="s2">&quot;bolder&quot;</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">bold</span><span class="o">?</span><span class="s2">&quot;bold&quot;</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">italic</span><span class="o">?</span><span class="s2">&quot;italic&quot;</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">loadedName</span><span class="o">||</span><span class="s2">&quot;sans-serif&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;, &#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">fallbackName</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">16</span><span class="o">&lt;=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="mi">16</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fontSizeScale</span><span class="o">=</span><span class="mi">16</span><span class="o">!=</span><span class="nx">f</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">b</span><span class="o">/</span><span class="mi">16</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">}},</span><span class="nx">setTextRenderingMode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">textRenderingMode</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setTextRise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">textRise</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code js-file-line"><span class="nx">a</span><span class="p">},</span><span class="nx">moveText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineX</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineY</span><span class="o">+=</span><span class="nx">b</span><span class="p">},</span><span class="nx">setLeadingMoveText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setLeading</span><span class="p">(</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">moveText</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setTextMatrix</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">textMatrix</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineX</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lineY</span><span class="o">=</span><span class="mi">0</span><span class="p">},</span><span class="nx">nextLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">moveText</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">leading</span><span class="p">)},</span><span class="nx">applyTextTransforms</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">textMatrix</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">textRise</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code js-file-line"><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">textHScale</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">textHScale</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">createTextGeometry</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">d</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="p">)</span><span class="o">:-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">g</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">g</span><span class="p">)</span><span class="o">:-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hScale</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">vScale</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">angle</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">spaceWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">spaceWidth</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fontName</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">loadedName</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fontFamily</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fallbackName</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">paintChar</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSizeScale</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">textRenderingMode</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;</span><span class="mi">3</span><span class="p">,</span><span class="nx">h</span><span class="o">=!!</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;</span><span class="mi">4</span><span class="p">),</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">||</span><span class="nx">h</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getPathGenerator</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">(),</span><span class="nx">j</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">),(</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fill</span><span class="p">(),(</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">stroke</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">restore</span><span class="p">())</span><span class="o">:</span><span class="p">((</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),(</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">strokeText</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingTextPaths</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingTextPaths</span><span class="o">=</span><span class="p">[])).</span><span class="nx">push</span><span class="p">({</span><span class="nx">transform</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">addToPath</span><span class="o">:</span><span class="nx">j</span><span class="p">})},</span><span class="nx">showText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSizeScale</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">charSpacing</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">wordSpacing</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">textHScale</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="o">||</span><span class="nx">ba</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">vertical</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaultVMetrics</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">coded</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">textMatrix</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createTextGeometry</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="o">++</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">x</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="nx">q</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">j</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">processingType3</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code js-file-line"><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">executeOperatorList</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">operatorList</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">q</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">t</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="nx">u</span><span class="o">+=</span><span class="nx">t</span><span class="p">}}</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">processingType3</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">applyTextTransforms</span><span class="p">();</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">textMatrix</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">textMatrix</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">k</span><span class="o">*</span><span class="nx">k</span><span class="o">+</span><span class="nx">w</span><span class="o">*</span><span class="nx">w</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">k</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">x</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getSinglePixelWidth</span><span class="p">()</span><span class="o">:</span><span class="nx">x</span><span class="o">/</span><span class="nx">k</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createTextGeometry</span><span class="p">());</span><span class="mi">1</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">x</span><span class="o">/=</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span><span class="nx">x</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="o">++</span><span class="nx">x</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">x</span><span class="p">],</span><span class="kc">null</span><span class="o">===</span><span class="nx">q</span><span class="p">)</span><span class="nx">k</span><span class="o">+=</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code js-file-line"><span class="nx">j</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">fontChar</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">vmetric</span><span class="o">||</span><span class="nx">v</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">vmetric</span><span class="o">?</span><span class="nx">y</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="mf">0.5</span><span class="o">*</span><span class="nx">q</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">A</span><span class="o">=-</span><span class="nx">A</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">y</span><span class="o">?-</span><span class="nx">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">t</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontMatrix</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontDirection</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">accent</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">E</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">disabled</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">A</span><span class="o">/</span><span class="nx">g</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="p">(</span><span class="nx">k</span><span class="o">+</span><span class="nx">D</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="o">/</span><span class="nx">g</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">remeasure</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="o">=</span><span class="mi">1</span><span class="nx">E3</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">z</span><span class="p">).</span><span class="nx">width</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSizeScale</span><span class="p">,</span><span class="nx">t</span><span class="o">/=</span><span class="nx">w</span><span class="p">,</span><span class="nx">w</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">q</span><span class="o">/=</span><span class="nx">t</span><span class="p">,</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="o">/=</span><span class="nx">t</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">paintChar</span><span class="p">(</span><span class="nx">z</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">C</span><span class="p">),</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="o">=</span><span class="nx">q</span><span class="o">+</span><span class="nx">B</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">x</span><span class="o">/</span><span class="nx">g</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">C</span><span class="o">-</span><span class="nx">B</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">paintChar</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">fontChar</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">z</span><span class="p">)));</span><span class="nx">k</span><span class="o">+=</span><span class="nx">y</span><span class="p">;</span><span class="nx">u</span><span class="o">+=</span><span class="nx">y</span><span class="p">;</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}</span><span class="nx">l</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="nx">k</span><span class="o">*</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code js-file-line"><span class="nx">m</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">k</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">canvasWidth</span><span class="o">=</span><span class="nx">u</span><span class="p">,</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">angle</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="p">.</span><span class="nx">appendText</span><span class="p">(</span><span class="nx">n</span><span class="p">));</span><span class="k">return</span> <span class="nx">u</span><span class="p">},</span><span class="nx">showSpacedText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mf">0.0010</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">textHScale</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">fontDirection</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">font</span><span class="p">.</span><span class="nx">vertical</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">applyTextTransforms</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createTextGeometry</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">s</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=-</span><span class="nx">s</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="nx">s</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">s</span><span class="p">,</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">+=</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">showText</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">+=</span><span class="nx">k</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">))}</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">canvasWidth</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code js-file-line"><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">angle</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textLayer</span><span class="p">.</span><span class="nx">appendText</span><span class="p">(</span><span class="nx">g</span><span class="p">))},</span><span class="nx">nextLineShowText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">nextLine</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">showText</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">nextLineSetSpacingShowText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setWordSpacing</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setCharSpacing</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">nextLineShowText</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">setCharWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">setCharWidthAndBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">rectangle</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">endPath</span><span class="p">()},</span><span class="nx">setStrokeColorSpace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">setFillColorSpace</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">fromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code js-file-line"><span class="nx">setStrokeColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">getColorN_Pattern</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;TilingPattern&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">base</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">commonObjs</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="p">)}</span><span class="k">else</span><span class="s2">&quot;RadialAxial&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;Dummy&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">shadingFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Unkown IR type &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">setStrokeColorN</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="p">;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">getColorN_Pattern</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setStrokeColor</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">setFillColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">setFillColorN</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="p">;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getColorN_Pattern</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setFillColor</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">setStrokeGray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">gray</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code js-file-line"><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">setFillGray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">gray</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">setStrokeRGBColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">rgb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">setFillRGBColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code js-file-line"><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">rgb</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="p">.</span><span class="nx">getRgb</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssRgb</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">setStrokeCMYKColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">cmyk</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssCmyk</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">strokeColor</span><span class="o">=</span><span class="nx">e</span><span class="p">},</span><span class="nx">setFillCMYKColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColorSpace</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">singletons</span><span class="p">.</span><span class="nx">cmyk</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">makeCssCmyk</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="o">=</span><span class="nx">e</span><span class="p">},</span><span class="nx">shadingFill</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">shadingFromIR</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getPattern</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mozCurrentTransformInverse</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">],</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">applyTransform</span><span class="p">([</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">],</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="nx">E10</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="nx">E10</span><span class="p">,</span><span class="mi">2</span><span class="nx">E10</span><span class="p">,</span><span class="mi">2</span><span class="nx">E10</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="nx">beginInlineImage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call beginInlineImage&quot;</span><span class="p">)},</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code js-file-line"><span class="nx">beginImageData</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Should not call beginImageData&quot;</span><span class="p">)},</span><span class="nx">paintFormXObjectBegin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">paintFormXObjectDepth</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransformStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">6</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">4</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rectangle</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">clip</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">endPath</span><span class="p">())},</span><span class="nx">paintFormXObjectEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">paintFormXObjectDepth</span><span class="p">;</span><span class="k">do</span> <span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="k">while</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">paintFormXObjectDepth</span><span class="o">&gt;=</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code js-file-line"><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransform</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">baseTransformStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">()},</span><span class="nx">beginGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isolated</span><span class="o">||</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;TODO: Support non-isolated groups.&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">knockout</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">(</span><span class="s2">&quot;Support knockout groups.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">matrix</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">matrix</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">bbox</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Bounding box is required.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getAxialAlignedBoundingBox</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">bbox</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;groupAt&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">groupLevel</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">).</span><span class="nx">context</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code js-file-line"><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">setTransform</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;strokeStyle fillStyle fillRule globalAlpha lineWidth lineCap lineJoin miterLimit globalCompositeOperation font&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="s2">&quot;setLineDash&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setLineDash</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getLineDash</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineDashOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineDashOffset</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;mozDash&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">mozDash</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mozDash</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">mozDashOffset</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mozDashOffset</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setGState</span><span class="p">([[</span><span class="s2">&quot;SMask&quot;</span><span class="p">,</span><span class="s2">&quot;None&quot;</span><span class="p">],[</span><span class="s2">&quot;BM&quot;</span><span class="p">,</span><span class="s2">&quot;Normal&quot;</span><span class="p">],[</span><span class="s2">&quot;ca&quot;</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code js-file-line"><span class="mi">1</span><span class="p">],[</span><span class="s2">&quot;CA&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">]]);</span><span class="k">this</span><span class="p">.</span><span class="nx">groupStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">groupLevel</span><span class="o">++</span><span class="p">},</span><span class="nx">endGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">groupLevel</span><span class="o">--</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">groupStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="s2">&quot;imageSmoothingEnabled&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">imageSmoothingEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozImageSmoothingEnabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="nx">beginAnnotations</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="k">new</span> <span class="nx">pa</span><span class="p">},</span><span class="nx">endAnnotations</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="nx">beginAnnotation</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rectangle</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code js-file-line"><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">clip</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">endPath</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">endAnnotation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="nx">paintJpegXObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Dependent image isn&#39;t ready yet&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">mozCurrentTransformInverse</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCanvasPosition</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">.</span><span class="nx">appendImage</span><span class="p">({</span><span class="nx">objId</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">top</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="o">/</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="o">/</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]}));</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code js-file-line"><span class="nx">paintImageMaskXObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">processingType3</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;compiled&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&gt;=</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">]),</span><span class="nx">n</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">4</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">4</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="o">+=</span><span class="mi">4</span><span class="p">;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="nx">n</span><span class="o">+=</span><span class="mi">4</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="nx">p</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="nx">p</span><span class="p">]</span><span class="o">?</span><span class="mi">8</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">q</span><span class="o">=</span><span class="p">(</span><span class="nx">q</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">4</span><span class="p">]</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="nx">p</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code js-file-line"><span class="mi">4</span><span class="p">]</span><span class="o">?</span><span class="mi">8</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">s</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="o">+</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="o">++</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="o">+=</span><span class="mi">4</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="nx">p</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="o">+</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="nx">n</span><span class="o">+=</span><span class="mi">4</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span> <span class="nx">a</span><span class="p">}}</span><span class="nx">n</span><span class="o">-=</span><span class="nx">p</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">4</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="o">+</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="o">+=</span><span class="mi">4</span><span class="p">;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">j</span><span class="o">+</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="o">++</span><span class="nx">l</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">Int32Array</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">m</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]),</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">m</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">];)</span><span class="nx">h</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">!==</span><span class="nx">j</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="nx">h</span><span class="o">%</span><span class="nx">m</span><span class="p">,</span><span class="nx">f</span><span class="p">];</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="k">do</span> <span class="nx">h</span><span class="o">+=</span><span class="nx">p</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="mi">5</span><span class="o">!==</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="mi">10</span><span class="o">!==</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">p</span><span class="o">&amp;</span><span class="mi">51</span><span class="o">*</span><span class="nx">s</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">&amp;=</span><span class="nx">s</span><span class="o">&gt;&gt;</span><span class="mi">2</span><span class="o">|</span><span class="nx">s</span><span class="o">&lt;&lt;</span><span class="mi">2</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="o">%</span><span class="nx">m</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="o">/</span><span class="nx">m</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="o">--</span><span class="nx">l</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">n</span><span class="o">!==</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code js-file-line"><span class="nx">h</span><span class="p">);</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="o">--</span><span class="nx">f</span><span class="p">}}</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">c</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveTo</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineTo</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">])}</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}}}</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">compiled</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">compiled</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">compiled</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;maskCanvas&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">save</span><span class="p">(),</span><span class="nx">Z</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="s2">&quot;source-in&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getPattern</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code js-file-line"><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">restore</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">paintInlineImageXObject</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">canvas</span><span class="p">))},</span><span class="nx">paintImageMaskXObjectGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;maskCanvas&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">Z</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="o">=</span><span class="s2">&quot;source-in&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Pattern&quot;</span><span class="o">===</span><span class="nx">m</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">getPattern</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">restore</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">transform</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code js-file-line"><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}},</span><span class="nx">paintImageXObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">objs</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;Dependent image isn&#39;t ready yet&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">paintInlineImageXObject</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">paintInlineImageXObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">/</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">mozCurrentTransformInverse</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">h</span><span class="p">),</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">HTMLElement</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;inlineImage&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span><span class="nx">Z</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">canvas</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code js-file-line"><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;prescale1&quot;</span><span class="p">;</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">k</span><span class="o">||</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">k</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="o">/=</span><span class="nx">k</span><span class="o">/</span><span class="nx">p</span><span class="p">);</span><span class="mi">2</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">g</span><span class="o">/=</span><span class="nx">l</span><span class="o">/</span><span class="nx">q</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">canvas</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;prescale1&quot;</span><span class="o">===</span><span class="nx">n</span><span class="o">?</span><span class="s2">&quot;prescale2&quot;</span><span class="o">:</span><span class="s2">&quot;prescale1&quot;</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCanvasPosition</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">.</span><span class="nx">appendImage</span><span class="p">({</span><span class="nx">imgData</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">top</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="o">/</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="o">/</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]}));</span><span class="k">this</span><span class="p">.</span><span class="nx">restore</span><span class="p">()},</span><span class="nx">paintInlineImageXObjectGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getCanvas</span><span class="p">(</span><span class="s2">&quot;inlineImage&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">Z</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">transform</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">transform</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">drawImage</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">w</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCanvasPosition</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">imageLayer</span><span class="p">.</span><span class="nx">appendImage</span><span class="p">({</span><span class="nx">imgData</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">top</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">}));</span><span class="nx">c</span><span class="p">.</span><span class="nx">restore</span><span class="p">()}},</span><span class="nx">markPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">markPointProps</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">beginMarkedContent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">beginMarkedContentProps</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">endMarkedContent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span></td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code js-file-line"><span class="nx">beginCompat</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">endCompat</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">consumePath</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="o">==</span><span class="nx">ob</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;mozFillRule&quot;</span><span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozFillRule</span><span class="o">=</span><span class="s2">&quot;evenodd&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clip</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozFillRule</span><span class="o">=</span><span class="s2">&quot;nonzero&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="s2">&quot;evenodd&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clip</span><span class="p">()}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">clip</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">pendingClip</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">()},</span><span class="nx">getSinglePixelWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozCurrentTransformInverse</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]))},</span><span class="nx">getCanvasPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code js-file-line"><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">mozCurrentTransform</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">5</span><span class="p">]]}};</span><span class="nx">ma</span><span class="o">=</span><span class="nx">nb</span><span class="p">;</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">qa</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="p">)</span><span class="nx">qa</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">pb</span><span class="o">=</span><span class="sr">/Mozilla\/5.0.*?rv:(\d+).*? Gecko/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">);</span><span class="nx">qa</span><span class="o">=</span><span class="nx">pb</span><span class="o">&amp;&amp;</span><span class="mi">14</span><span class="o">&lt;=</span><span class="nx">pb</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="p">{</span><span class="nx">insertRule</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;PDFJS_FONT_STYLE_TAG&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;PDFJS_FONT_STYLE_TAG&quot;</span><span class="p">,</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">sheet</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code js-file-line"><span class="nx">get</span> <span class="nx">loadTestFont</span><span class="p">(){</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;loadTestFont&quot;</span><span class="p">,</span><span class="nx">atob</span><span class="p">(</span><span class="s2">&quot;T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==&quot;</span><span class="p">))},</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code js-file-line"><span class="nx">loadTestFontId</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">loadingContext</span><span class="o">:</span><span class="p">{</span><span class="nx">requests</span><span class="o">:</span><span class="p">[],</span><span class="nx">nextRequestId</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">isSyncFontLoadingSupported</span><span class="o">:</span><span class="nx">qa</span><span class="p">,</span><span class="nx">bind</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="nx">R</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;bind() shall be called from main thread&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">attached</span><span class="o">||!</span><span class="mi">1</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">loading</span><span class="p">)){</span><span class="nx">g</span><span class="p">.</span><span class="nx">attached</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">bindDOM</span><span class="p">();</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">))}}</span><span class="nx">e</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">queueLoadingCallback</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isSyncFontLoadingSupported</span><span class="o">?</span><span class="nx">P</span><span class="p">.</span><span class="nx">prepareFontLoadEvent</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">complete</span><span class="p">()},</span><span class="nx">queueLoadingCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">loadingContext</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;pdfjs-font-loading-&quot;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code js-file-line"><span class="nx">b</span><span class="p">.</span><span class="nx">nextRequestId</span><span class="o">++</span><span class="p">,</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">end</span><span class="o">||</span><span class="nx">l</span><span class="p">(</span><span class="s2">&quot;completeRequest() cannot be called twice&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">requests</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">requests</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">end</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">requests</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">callback</span><span class="p">,</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">callback</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">started</span><span class="o">:</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">requests</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">prepareFontLoadEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">24</span><span class="o">|</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">16</span><span class="o">|</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">8</span><span class="o">|</span><span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">3</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">l</span><span class="o">++</span><span class="p">;</span><span class="mi">30</span><span class="o">&lt;</span><span class="nx">l</span><span class="o">?</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code js-file-line"><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;Load test font never loaded.&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="s2">&quot;30px &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">data</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)))}</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;lt&quot;</span><span class="o">+</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">loadTestFontId</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadTestFont</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">976</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">16</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">3</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">+=</span><span class="mi">4</span><span class="p">)</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="o">-</span><span class="mi">1482184792</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="o">-</span><span class="mi">1482184792</span><span class="o">+</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;XXX&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">q</span><span class="o">&gt;&gt;</span><span class="mi">24</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">)</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">q</span><span class="o">&gt;&gt;</span><span class="mi">16</span><span class="o">&amp;</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code js-file-line"><span class="mi">255</span><span class="p">)</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">q</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">)</span><span class="o">+</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">));</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;url(data:font/opentype;base64,&quot;</span><span class="o">+</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;);&quot;</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="s1">&#39;@font-face { font-family:&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;;src:&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="p">[];</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">loadedName</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="s2">&quot;visibility: hidden;width: 10px; height: 10px;position: absolute; top: 0px; left: 0px;&quot;</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="o">++</span><span class="nx">g</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="s2">&quot;Hi&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontFamily</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code js-file-line"><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">complete</span><span class="p">()})}},</span><span class="nx">jb</span><span class="p">,</span><span class="nx">qb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledGlyphs</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]}};</span><span class="nx">qb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">bindDOM</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">disableFontFace</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedName</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;url(data:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">mimetype</span><span class="o">+</span><span class="s2">&quot;;base64,&quot;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;);&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s1">&#39;@font-face { font-family:&quot;&#39;</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code js-file-line"><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;;src:&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">pdfBug</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;FontInspector&quot;</span><span class="k">in</span> <span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">FontInspector</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">FontInspector</span><span class="p">.</span><span class="nx">fontAdded</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getPathGenerator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledGlyphs</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedName</span><span class="o">+</span><span class="s2">&quot;_path_&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledGlyphs</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;c&quot;</span><span class="p">,</span><span class="s2">&quot;size&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledGlyphs</span><span class="p">[</span><span class="nx">b</span><span class="p">]}};</span><span class="nx">jb</span><span class="o">=</span><span class="nx">qb</span><span class="p">}).</span><span class="nx">call</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nb">window</span><span class="o">?</span><span class="k">this</span><span class="o">:</span><span class="nb">window</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code js-file-line"><span class="o">!</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">workerSrc</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nb">document</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">PDFJS</span><span class="p">.</span><span class="nx">workerSrc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="k">return</span> <span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\.js$/i</span><span class="p">,</span><span class="s2">&quot;.worker.js&quot;</span><span class="p">)}());</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05356s from github-fe131-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-f4749195ce218608caf72b3ddefff5f580445386f2529c60e027cd18d1db0cb5.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-56901a1e60b184d90b134d3f30a8700dee7e5d313a3a70e28f6adb239d7d8797.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

